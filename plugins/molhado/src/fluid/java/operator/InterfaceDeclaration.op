# $Header: /cvs/fluid/fluid/code/fluid/java/operator/InterfaceDeclaration.op,v 1.5 1999/02/04 13:29:58 chance Exp $
public operator InterfaceDeclaration implements TypeDeclInterface, FlowUnit 
{
  syntax {
    $mods:Modifiers "interface" $id:Info extensions:Extensions
    body:ClassBody // sloppy but easier than doing everything over again
  }

  /** Use the interface to determine what operators are legal:
   */
  public boolean includes(Operator other) {
    return (other instanceof InterfaceDeclaration) ||
	   (other instanceof NestedInterfaceDeclaration);
  }

  public Component createComponent(IRNode node) {
    Component comp = new Component(node,0,0,0);

    /* the class body executes the static initializer */
    Subcomponent sub = new Subcomponent(comp,tree.childLocation(node,1),1,1,1);
    ControlNode startNode = new ComponentSource(comp,null);
    ControlNode endNode = new ComponentSink(comp,Boolean.TRUE);
    ControlNode abruptNode = new ComponentSink(comp,Boolean.FALSE);

    ControlEdge.connect(startNode,sub.getEntryPort());
    ControlEdge.connect(endNode,sub.getNormalExitPort());
    ControlEdge.connect(abruptNode,sub.getAbruptExitPort());

    return comp;
  }

  public Source getSource(IRNode node) {
    Component comp = JavaComponentFactory.prototype.getComponent(node);
    Subcomponent sub = comp.getSubcomponent(tree.childLocation(node,1));
    ControlEdge e = ((SubcomponentEntryPort)sub.getEntryPort()).getInput();
    return (Source)e.getSource();
  }
  public Sink getNormalSink(IRNode node) {
    Component comp = JavaComponentFactory.prototype.getComponent(node);
    Subcomponent sub = comp.getSubcomponent(tree.childLocation(node,1));
    ControlEdge e = ((SubcomponentNormalExitPort)sub.getNormalExitPort()).getOutput();
    return (Sink)e.getSink();
  }
  public Sink getAbruptSink(IRNode node) {
    Component comp = JavaComponentFactory.prototype.getComponent(node);
    Subcomponent sub = comp.getSubcomponent(tree.childLocation(node,1));
    ControlEdge e = ((SubcomponentAbruptExitPort)sub.getAbruptExitPort()).getOutput();
    return (Sink)e.getSink();
  }
}
