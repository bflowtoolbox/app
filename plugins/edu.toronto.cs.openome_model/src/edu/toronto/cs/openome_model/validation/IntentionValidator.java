/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package edu.toronto.cs.openome_model.validation;

import edu.toronto.cs.openome_model.Container;
import edu.toronto.cs.openome_model.Contribution;
import edu.toronto.cs.openome_model.Decomposition;
import edu.toronto.cs.openome_model.EvaluationLabel;
import edu.toronto.cs.openome_model.HumanJudgment;
import edu.toronto.cs.openome_model.LabelBag;
import edu.toronto.cs.openome_model.Property;

import org.eclipse.emf.common.util.EList;

/**
 * A sample validator interface for {@link edu.toronto.cs.openome_model.Intention}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface IntentionValidator {
	boolean validate();

	boolean validateName(String value);
	boolean validateSystem(Boolean value);
	boolean validateBoundary(Boolean value);
	boolean validateExclusive(Boolean value);
	boolean validateSequential(Boolean value);
	boolean validateParallel(Boolean value);
	boolean validateProperty(EList<Property> value);
	boolean validateDecompositions(EList<Decomposition> value);
	boolean validateParentDecompositions(EList<Decomposition> value);
	boolean validateContainer(Container value);
	boolean validateQualitativeReasoningCombinedLabel(EvaluationLabel value);
	boolean validateQualitativeReasoningSatisfiedLabel(EvaluationLabel value);
	boolean validateQualitativeReasoningDenialLabel(EvaluationLabel value);
	boolean validateQuantitativeReasoningCombinedLabel(double value);
	boolean validateQuantitativeReasoningDeniedLabel(double value);
	boolean validateQuantitativeReasoningSatisfiedLabel(double value);
	boolean validateContributesTo(EList<Contribution> value);
	boolean validateContributesFrom(EList<Contribution> value);

	boolean validateHumanJudgments(EList<HumanJudgment> value);

	boolean validateLabelBag(LabelBag value);

	boolean validateInitialEvalLabel(EvaluationLabel value);

	boolean validateReverseLabelBag(LabelBag value);
}
