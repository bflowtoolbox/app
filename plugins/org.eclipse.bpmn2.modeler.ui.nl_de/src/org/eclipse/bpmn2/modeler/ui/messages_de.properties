###############################################################################
# Copyright (c) 2011, 2012, 2013, 2014 Red Hat, Inc. 
# All rights reserved. 
# This program is made available under the terms of the 
# Eclipse Public License v1.0 which accompanies this distribution, 
# and is available at http://www.eclipse.org/legal/epl-v10.html 
#
# Contributors: 
# Red Hat, Inc. - initial API and implementation 
###############################################################################
Activator_Error=Fehler aufgetreten
InputMessageAdapter_0=Eingabe-Nachricht
MessageAdapter_Message_1=Nachricht
OperationAdapter_Operation_1=Operation
OperationAdapter_0={0} - {1}
OutputMessageAdapter_0=Ausgabe-Nachricht
PartAdapter_Part_1=Teil
PortTypeAdapter_Port_Type_2=Schnittstelle
FaultAdapter_Fault_1=Fehler
XSDAttributeDeclarationAdapter_XSD_Attribute_1=XSD-Attribut
XSDElementDeclarationAdapter_XSD_Element_1=XSD-Element
XSDTypeDefinitionAdapter_XSD_Type_1=XSD-Typ
XSDSimpleTypeDefinitionAdapter_0=Einfache Typdefinition
XSDComplexTypeDefinitionAdapter_0=Komplexe Typdefinition
XSDSchemaAdapter_0=Schema
XSDSchemaAdapter_1=Schema targetNamespace={0}
XSDSchemaTreeNode_0=Schema
XSDSchemaTreeNode_1=Schema targetNamespace={0}

SchemaImportDialog_Browse_WSDL_Title=Wähle WSDL-Datei zum Importieren
SchemaImportDialog_Browse_XML_Title=Wähle XML-Datei zum Importieren
SchemaImportDialog_Browse_XSD_Title=Wähle XML-Schema zum Importieren
SchemaImportDialog_Import_Type_Title=Import-Typ
SchemaImportDialog_Import_Source_Title=Import-Quelle
SchemaImportDialog_Workspace_Button=Arbeitsbereich
SchemaImportDialog_File_System_Button=Dateisystem
SchemaImportDialog_URL_Button=URL
SchemaImportDialog_Location_Label=Speicherort:
SchemaImportDialog_Browse_Button=Wähle ...
SchemaImportDialog_Select_Resource_Title=Wähle Arbeitsbereich-Ressource zum Importieren
SchemaImportDialog_Types_Label=Verfügbare Typen:
SchemaImportDialog_Structure_Label=Struktur:
SchemaImportDialog_Invalid_Location=Ungültige Syntax zur Angabe des Speicherortes.
SchemaImportDialog_Ports_Title=Ports und Partner-Links:
SchemaImportDialog_Loading_Message=Lade {0} ...
SchemaImportDialog_Loaded_Message=Geladen: {0} [{1}ms]
SchemaImportDialog_Load_Failed_Message=Fehler beim Laden von {0} [{1}ms]

SchemaImportDialog_XSD_Button=XML-Schema (XSD)
SchemaImportDialog_WSDL_Button=Web Service Definition (WSDL)
SchemaImportDialog_Java_Button=Java
SchemaImportDialog_Browse_Java_Title=Wähle Java-Typ für den Import
SchemaImportDialog_Java_Types_Label=Java-Typen:
SchemaImportDialog_Load_Button=Laden
SchemaImportDialog_Type_Label=Typ:
SchemaImportDialog_BPMN2_Button=BPMN 2.0-Diagramm (BPMN2)
SchemaImportDialog_Browse_BPMN2_Title=Wähle BPMN2-Datei zum Importieren
SchemaImportDialog_Interfaces_Label=Schnittstellen und Beteiligte:
SchemaImportDialog_Select_Java_Message=Bite Java-Typ auswählen

ModelTreeLabelProvider_s1_s2={0} \: {1}

Bpmn2EditorAppearancePreferencePage_Apply_All=Änderungen auf alle anwenden 
Bpmn2EditorAppearancePreferencePage_Labels_Title=Beschriftungen
Bpmn2EditorPreferencePage_Colors_Group=Farben und Linienformate
Bpmn2EditorPreferencePage_GraphicalElements_Group=Grafische Elemente

Bpmn2EditorPreferencePage_GridHeight=Gitter-Höhe
Bpmn2EditorPreferencePage_GridWidth=Gitter-Breite
Bpmn2EditorPreferencePage_SnapToGrid=Am Gitter ausrichten

Bpmn2EditorPreferencePage_DefaultHeight=Standard-Höhe
Bpmn2EditorPreferencePage_DefaultWidth=Standard-Breite
Bpmn2EditorPreferencePage_UseDefaultSize=Benutze Standardwerte statt der in den BPMN2-Dateien eingestellten Werte

Bpmn2EditorPreferencePage_Change_Button=Ändern
Bpmn2EditorPreferencePage_Fill_Color_Label=&Hintergrundfarbe:
Bpmn2EditorPreferencePage_Foreground_Color_Label=&Vordergrundfarbe:
Bpmn2EditorPreferencePage_Label_Color_Label=&Schriftfarbe:
Bpmn2EditorPreferencePage_Label_Font_Label=Schrift&art:
Bpmn2EditorPreferencePage_MultiSelected_Color_Label=&Mehrfach-Farbauswahl:
Bpmn2EditorPreferencePage_Routing_Style_Label=Routing-Stil:
Bpmn2EditorPreferencePage_Label_Location_Label=Ort (relativ zum Bild):
Bpmn2EditorPreferencePage_Selected_Color_Label=&Gewählte Farbe:
Bpmn2HomePreferencePage_Default_DI_Values_Title=Standardwerte für optionale BPMN-Diagram Interchange (DI)-Attribute
Bpmn2PreferencePage_HomePage_Description=Allgemeine Einstellungen für den BPMN2 Modeler
Bpmn2PreferencePage_HomePage_Resolve_Externals_Always=Immer
Bpmn2PreferencePage_HomePage_Resolve_Externals_Never=Niemals
Bpmn2PreferencePage_HomePage_Resolve_Externals_Prompt=Nachfragen
Bpmn2PropertyPage_Enable_BPMN2_Project_Nature=Zum BPMN2-Projekt machen
Bpmn2PropertyPage_HomePage_Description=Projektspezifische Einstellungen für den BPMN2 Modeler

#
# Long descriptions of BPMN2 elements
UI_UnknownDiagram_description = Der Diagrammtyp wurde noch nicht definiert.
UI_Process_description = Ein Prozess ist eine Abfolge von Arbeitsschritten in einer Organisation. \
 Ein Prozess wird als Graph von sog. Flow-Elementen dargestellt. Das sind Aktivitäten, Ereignisse, Gatways. \
 Sequenzfluss-Pfeile definieren die Ausführungssemantik. Prozesse können auf jeder Ebene definiert werden - \
 von unternehmensweiten Prozessen bis zu Prozessen für eine einzelne Person. Prozesse auf unterer Ebene können \
 zusammengefasst werden, um ein gemeinsames Geschäftsziel zu erreichen..
UI_Choreography_description = Eine Choreographie beschreibt, auf welche Weise Geschäftsbeteiligte\
 ihre Interaktionen koordinieren. Im Blick ist dabei nicht die Art und Weise, in der die Beteiligten ihre, \
 Zusammenarbeit organisieren, sondern der Austausch von Informationen (Nachrichten) zwischen den Beteilgiten.
UI_Collaboration_description = Eine Kollaboration besteht in der Regel aus zwei oder mehr Pools, die die Beteiligten der Kollaboration darstellen. \
 Der Nachrichtenaustausch zwischen den Beteiligten wird durch Nachrichtenfluss-Pfeile dargestellt. Diese verbinden zwei Pools (oder Objekte in \
 diesen Pools). Die ausgetauschten Nachrichten KÖNNEN ebenfalls gezeigt werden. \
 A Pool kann leer ("zugeklappt") sein, dann wird er als "Black-Box" angesehen. Ein Pool kann auch den enthaltenen Prozess zeigen ("White-Box-Darstellung"). Choreographien KÖNNEN zwischen \
 den Pools gezeigt werden. Alle Kombinationen von Pools, Prozessen \
 und einer Choreographie sind in der Darstellung einer Kollaboration erlaubt..
 
UI_SequenceFlow_description = Ein Sequenzfluss wird genutzt, um die Reihenfolge festzulegen, \
 in der Aktivitäten in einem Prozess oder einer Choreographie ausgeführt werden. \
 An einem Sequenzfluss-Pfeil kann ein Bedingungs-Ausdruck notiert sein. Dieser besagt, dass dieser Sequenzfluss nur \
 verfolgt wird, wenn der Ausdruck "wahr" ist. Bedingungs-Ausdrücke werden in der Regel \
 nach Gateways oder Aktivitäten genutzt. \
 Ein Sequenzfluss, der von einem  Exklusiv-Oder-Gateway, ein Inklusiv-Oder-Gateway, einem komplexen Gateway oder einer Aktivität ausgeht, \
 kann als "default" definiert werden. Eine besondere Markierung am Sequenzfluss-Pfeil macht deutlich, dass es sich um den Default-Sequenzfluss handelt. \
 Der Default-Sequenzfluss wird verfolgt, wenn alle sonstigen Bedingungen an Sequenzfluss-Pfeilen nach dem Gateway oder einer Aktivität \
 "falsch" sind.
UI_MessageFlow_description = Ein Nachrichtenfluss wird genutzt, um den Austausch von Nachrichten zwischen den Beteiligten \
 darzustellen. In BPMNwerden zwei getrennte Pools in einem Kollaborations-Diagramm genutzt \
 um die Teilnehmer (z.B. PartnerEntities und/oder PartnerRoles) darzustellen.
UI_Association_description = Eine Association wird genutzt, um Informationen und Artefakte mit den grafischen BPMN-Elementen zu verbinden. \
 Text-Anmerkungen und andere Artefakte können den grafischen Elementen verbunden werden. Eine Pfeilspitze an der Verbindung \
 zeigt (wenn sinnvoll) die Richtung des Flusses (z.B. von Daten).
UI_DataInputAssociation_description = Datenzuordnungen werden genutzt, um Datenobjekte mit Ein- oder Ausgaben von Aktivitäten zu verbinden. \
 Eine Pfeilspitze zeigt die Richtung des Datenflusses an.
UI_DataOutputAssociation_description = Datenzuordnungen werden genutzt, um Datenobjekte mit Ein- oder Ausgaben von Aktivitäten zu verbinden. \
 Eine Pfeilspitze zeigt die Richtung des Datenflusses an.

UI_Task_description = Eine Aufgabe ist eine unteilbare Aktivität, die in einem Prozess durchgeführt wird. \
 Eine Aufgabe wird dann genutzt, wenn die Arbeitsschritte nicht in weitere Detailebenen zerlegt werden sollen.
UI_Task_tooltip = Aufgabe
UI_ManualTask_description = Eine manuelle Aufgabe wird von einem Menschen ausgeführt. Sie steht nicht unter Verwaltung eines Geschäftsprozess- \-
 Managementsystems. Das heißt, dass kein Managementsystem die Aufgabe zuweist oder den Start oder das Ende kontrolliert. \
 Ein Beispiel ist die Installation eines Telefons durch einen Techniker beim Kunden, die der Techniker mittels papierbasierter Aufgabenliste vornimmt.
UI_ManualTask_tooltip = Manuelle Aufgabe
UI_UserTask_description = Eine Benutzer-Aufgabe ist eine Aufgabe, die einem Benutzer durch eine Software-Anwendung \
 zugewiesen wird. Diese Software-Anwendung verwaltet den Lebenszyklus der Aufgabe (insbesondere das Zuweisen an einen Bearbeiter). \
 Eine Benutzer-Aufgabe kann mit verschiedenen Technologien implementiert werden. Dies ist im Attribut "implementation" festgelegt. \
 Neben Web-Services können auch beliebige andere Technologien verwendet werden. Um beispielsweise den OASIS-Standard WS-HumanTask \
 zu nutzen, muss das Attribut "implementation" auf http://docs.oasis-open.org/ns/bpel4people/ws-humantask/protocol/200803 gesetzt werden.
UI_UserTask_tooltip = Benutzer-Aufgabe
UI_BusinessRuleTask_description = Eine Geschäftsregel-Aufgabe stellt einen Mechanismus bereit, Eingabedaten an eine Business Rule Engine zu \
 übergeben und die von der Business Rule Engine gelieferten Ergebnisse entgegenzunehmen.
UI_BusinessRuleTask_tooltip = Geschäftsregel-Aufgabe
UI_ServiceTask_description = Eine Service-Aufgabe ruft einen automatisiert ablaufenden Service (z.B. Web-Service) auf.
UI_ServiceTask_tooltip = Service-Aufgabe
UI_SendTask_description = Eine Senden-Aufgabe sendet eine Nachricht an einen externen Beteiligten. Sobald die Nachricht versendet wurde, \
 ust die Senden-Aufgabe beendet.
UI_SendTask_tooltip = Senden-Aufgabe
UI_ReceiveTask_description = Eine Empfangen-Aufgabe wartet auf den Eingang einer Nachricht von einem externen Beteiligten. Sobald die Nachricht \
 empfangen wurde, ist die Empfangen-Aufgabe beendet.
UI_ReceiveTask_tooltip = Empfangen-Aufgabe
UI_ChoreographyTask_description =  Eine Choreographie-Aufgabe repräsentiert eine Interaktion (eine oder zwei Nachrichtenen, die zwischen zwei \
 Beteiligten ausgetauscht werden).
UI_ScriptTask_description = Eine Skript-Aufgabe wird von einem Geschäftsprozess-Managementsystem ausgeführt.\
 Der Modellierer legt ein auszuführendes Skript fest. Dieses muss vom Geschäftsprozess-Managementsystem ausführbar sein.\
 Wenn die Aufgabe bereit zum Starten ist, führt das Geschäftsprozess-Managementsystem das Skript automatisch aus.\
 Wenn die Abarbeitung des Skripts beendet ist, ist auch die Skript-Aufgabe beendet.

 
UI_StartEvent_description = Ein Startereignis zeigt an, wo ein Prozess startet. Das Startereignis startet den Sequenzfluss des Prozesses.\
 Daher hst ein Startereignis keine eingehenden Sequenzfluss-Pfeile.\
 Ein Startereignis kann einen oder mehrere Auslöser ("Trigger") haben, die den Start des Prozesses veranlassen.
UI_EndEvent_description = Ein Endereignis zeigt das Ende eines Prozesses an. \
 Daher hat ein Endereignis keine ausgehenden Sequenzfluss-Pfeile. \
 Ein Endereignis kann einen oder mehrere Auslöser ("Trigger") haben, die an den auslösenden oder übergeordneten Prozess zurückgeliefert werden (falls \
 es einen solchen gibt).
UI_IntermediateThrowEvent_description = Ein ausgelöstes Zwischenereignis meldet das Vorliegen einer Bedingung (Ereignis-Definition) \
 an einen auslösenden oder übergeordneten Prozess. Dieser Prozess sollte in der Lage sein, auf das Ereignis zu reagieren. Dazu muss ein passendes \
 Startereignis, ein eingetretenes Zwischenereignis oder ein angeheftetes Ereignis modelliert werden.
UI_IntermediateCatchEvent_description = Ein eingetretenes Zwischenereignis wird benutzt, um auf das Vorliegen einer Bedingung (Ereignis-Definition) \
 zu reagieren, die im Prozess selbst oder eienm externen Prozess auftritt.
UI_BoundaryEvent_description = Angeheftete Ereignisse werden auf die Begrenzung einer Aktivität gezeichnet. Sie zeigen die Reaktion auf das \
 Vorliegen einer Bedingung (Ereignis-Definition), die während der Ausführung der Aktivität eintreten kann.

UI_DataStore_description = Ein Datenspeicher erlaubt es den Aktivitäten, Informationen zu speichern oder abzurufen, die während der gesamten \
 Laufzeit des Prozesses genutzt werden können. Derselbe Datenspeicher kann  an einer oder mehreren Stellen des Prozesses durch das \
 "Datentopf"-Symbol bildlich dargestellt werden.
UI_DataStoreReference_description = Ein Datenspeicher erlaubt es den Aktivitäten, Informationen zu speichern oder abzurufen, die während der gesamten \
 Laufzeit des Prozesses genutzt werden können. Derselbe Datenspeicher kann  an einer oder mehreren Stellen des Prozesses durch das \
 "Datentopf"-Symbol bildlich dargestellt werden.
UI_DataInput_description = Prozesse und Aktivitäten benötigen zur Ausführung häufig Daten. \
 Zur Modellierung dienen Eingabedaten, die ggf. aus mehreren Einzeldaten bestehen.
UI_DataOutput_description = Als Ergebnis der Ausführung von Prozessen und Aktivitäten können Daten entstehen. \
 Zur Modellierung dienen Ausgabedaten, die ggf. aus mehreren Einzeldaten bestehen.
UI_ItemDefinition_description = Legt Art und Struktur von Datenobjekten fest, die in einem Prozess verwendet werden können. \
 Datenobjekte können entweder physische Objekte sein (z.B. mechanische Teile eines Autos) oder Informationen (z.B. ein Ersatzteilkatalog).\
UI_Message_description = Eine Nachricht stellt den Inhalt der Kommunikation zwischen zwei Beteiligten dar.

UI_Error_description = Ein Fehler wird ausgelöst, wenn es bei der Bearbeitung einer Aktivität ein kritisches Problem gibt oder wenn die \
 Ausführung einer Operation fehlschlägt. 
UI_Signal_description = Ein Signal ist eine Bedingung die keinen Fehlerzustand darstellt und dazu dient, Aktivitäten zu unterbrechen.\
 Auslöser für ein Signal könnte etwa die erfolgreiche Beendigung einer anderen Aktivität sein.
UI_Escalation_description = Eine Eskalation beschreibt die Weitergabe der Verantwortung an den  nächsthöheren Verantwortlichen.
UI_EndPoint_description = Ein Endpunkt wird genutzt, um bei einem Aufruf von Diensten Einzelheiten wie das verwendete Protokoll,
 Aufrufadressen, etc. anzugeben.
UI_Category_description = Kategorien können vom Modellierer nach eigenem Ermessen festgelegt werden, um Modellelemente einzuteilen. \
 Beispielsweise können Aktivitäten danach kategoriesiert werden, ob es sich um kundenorientierte Aktivitäten oder Dienstleistungen für \
  die eigene Organisation handelt.
UI_Interface_description = Eine Schnittstelle beschreibt eine Menge von Operationen, die von Services implementiert sind.
UI_Operation_description = Eine Operation definiert Nachrichten, die beim Aufruf einer Operation von einer Schnittstelle entgegengenommen \
 und gegebenenfalls von der Operation als Ergebnis zurückgeliefert werden. Die Definition kann auch die Beschreibung von Fehlern enthalten,\
  die beim Fehlschlagen der aufgerufenen Operation entstehen können.
UI_CancelEventDefinition_description = Abbruchereignisse werden ausgelöst wenn eine Transaktion beendet wird. Sie werden nur bei \
 Teilprozessen verwendet, bei denen Aktivitäten zu einer fachlichen Transaktion zusammengefasst sind. Wird eine solche Transaktion \
 abgebrochen, wird ein Abbruchereignis ausgelöst.
UI_CompensateEventDefinition_description = Kompensations-Ereignisse werden genutzt, wenn beim Fehlschlagen einer Aktivität bereits \
 durchgeführte Schritte rückgängig gemacht werden müssen.
UI_ConditionalEventDefinition_description = Bedingungs-Ereignisse werden genutzt, wenn es die Geschäftsregeln verlangen, dass auf das \
 Vorliegen gewisser Bedingungen reagiert werden muss.
UI_ErrorEventDefinition_description = Fehler-Ereignisse werden ausgelöst, wenn es bei der Bearbeitung einer Aktivität ein kritisches Problem gibt oder wenn die \
 Ausführung einer Operation fehlschlägt. 
UI_EscalationEventDefinition_description = Ein Eskalations-Ereignis bewirkt üblicherweise eine Weitergabe der Verantwortung an den \
 nächsthöheren Verantwortlichen.
UI_LingEventDefinition_description = 
UI_MessageEventDefinition_description = Ein Nachrichten-Ereignis tritt beim Empfang oder dem Senden einer Nachricht ein.
UI_SignalEventDefinition_description = Ein Signal-Ereignis tritt ein, wenn ein Signal an einen anderen Prozess gesendet oder empfangen wird.
UI_TerminateEventDefinition_description = Ein Terminierungs-Ereignis löst die sofortige Beendigung des Prozesses aus.
UI_TimerEventDefinition_description = Ein Zeit-Ereignis tritt ein, wenn bestimmte zeitliche Bedingungen eintreten. Das kann der Ablauf einer \
 Zeitspanne oder das Erreichen eines bestimmten Zeitpunkts sein.

UI_DataObject_description = Datenobjekte dienen der Modellierung von Daten, die in einem Prozess auftreten.\
 Ein Datenobjekt kann mehrfach in einem Diagramm vorkommen. Datenobjekte haben eine wohldefinierte Struktur.
UI_DataObjectReference_description = Datenobjekte dienen der Modellierung von Daten, die in einem Prozess auftreten.\
 Datenobjekt-Referenzen können verwendet werden, um Datenobjekte an verschiedenen Stellen in einem Diagramm zu verwenden.
UI_ExclusiveGateway_description = Ein Exklusive-Oder-Gateway wird genutzt um eine Entscheidung darzustellen. Von einem Exklusive-Oder-Gateway \
 gehen mehrere Sequenzfluss-Pfeile aus, die die verschiedenen Entscheidungsmöglichkeiten darstellen. Abhängig vom Ausgang der Entscheidung \
 wird genau einer der möglichen Wege verfolgt. Jede der Entscheidungsmöglichkeiten wird durch einen Bedingungs-Ausdruck dargestellt. 
UI_InclusiveGateway_description = Ein Inklusiv-Oder-Gateway kann genutzt werden, wenn als Ergebnis einer Entscheidung mehrere (jedoch mindestens \
eine) mögliche Alternativen ausgeführt werden sollen. Von einem Inklusiv-Oder-Gateway gehen mehrere Sequenzfluss-Pfeile aus, an denen ein \
Bedingungs-Ausdruck notiert ist. All die möglichen Pfade, für die dieser Ausdruck "wahr" ist werden parallel abgearbeitet.
UI_ParallelGateway_description = Ein Parallel-Gateway wird verwendet, um die parallele Ausführung mehrerer Prozesspfade zu beginnen und nach \
 Beendigung aller parallel ausgeführten Zweige den Prozessfluss wieder zu synchronisieren.
UI_EventBasedGateway_description = Ein ereignisbasiertes Gateway wird von mehreren Ereignissen gefolgt. Das Gatwway sorgt dafür, dass \
 (ausschließlich) derjenige ausgehende Sequenzfluss verfolgt wird, bei dem erstmals das modellierte Ereignis eintritt.
UI_ComplexGateway_description = Komplexe Gateways können verwendet werden, um komplexe Situationen zum Zusammenführen mehrerer Sequenzfluss-\
 Pfade zu modellieren. Beispielsweise kann festgelegt werden, dass drei von fünf eingehenden Sequenzflüssen beendet sein müssen.


UI_Participant_description = Ein Pool repräsentiert graphisch den Zuständigbereichs eines Teilnehmers in einer Kollaboration oder Choreographie.\
 Ein Pool kann einen Prozessablauf enthalten, er kann aber auch leer sein. Im letzteren Falle wird der Pool als "Black-Box" angesehen;\
 das Diagramm zeigt dann nicht die Abläufe im Zuständigbereich des Teilnehmers.
UI_ParticipantBand_description = Ein Teilnehmer-Feld (auch "Band" genannt) in einer Choreographie-Aufgabe steht für einen der Teilnehmer einer\
 Geschäftstransaktion. Einer der Teilnehmer kann als Initiator der Transaktion gekennzeichnet werden; sein Feld wird in heller Farbe angezeigt.\
 Felder von Teilnehmern, die nicht Initiator der Transaktion sind, werden in dunkler Farbe angezeigt. 
UI_Lane_description = Eine Lane dient dazu, Aktivitäten innerhalb eines Pools zu organisieren und zu kategorisieren. In eine Lane werden \
 zusammengehörige Elemente gezeichnet, etwa Rollen, Abteilungen oder Systeme, die für die Ausführung von Teilen des Prozesses verantwortlich sind.\
 Innerhalb von Lanes können erneut untergeordnete Lanes gezeichnet werden. Beispielsweise können Lanes, die für Abteilungen stehen, selbst Lanes \
 enthalten, die für Rollen innerhalb einer Abarbeitung stehen.
UI_SubProcess_description = Ein Teilprozess ist eine Aktivität, deren genaue Durchführung wie üblich mittels Aktivitäten, Gateways, Ereignissen\
 und Sequenzfluss-Pfeilen modelliert wurde. Jedoch kann ein Teilprozess "zugeklappt" werden, so dass diese Details unsichtbar werden und stattdessen \
 nur der Name des Teilprozesses angezeigt wird. Wird der Teilprozess "aufgeklappt", sind die Details der Durchführung sichtbar.
UI_Transaction_description = Eine Transaktion ist ein spezieller Teilprozess. Er zeichnet sich dadurch aus, dass bei nicht erfolgreicher Ausführung \
 die Ergebnisse der bereits durchgeführten Aktivitäten (insbesondere Datenänderungen) wieder rückgängig gemacht werden.
UI_SubChoreography_description = Eine Teil-Choreographie kann genutzt werden, um den Sequenzfluss zwischen den Aktivitäten in einer Choreographie \
 abzubilden. Wird die Teil-Choreographie "aufgeklappt", sind die diese Details sichtbar. Wird sie "zugeklappt" ist nur der Name der Teil-Choreographie sichtbar.
UI_CallActivity_description = Eine Aufruf-Aktivität beschreibt den Aufruf eines global definierten Prozesses oder einer global definierten Aufgabe.
 Solche global definierten Prozesse bzw. Aufgaben zeichnen sich dadurch aus, dass sie in jeden anderen Prozess "eingebunden" werden können.
UI_Conversation_description = Eine Konversation stellt die zwischen mindestens zwei Beteiligten in einem bestimmten Zusammenhang ausgetauschten \
 Nachrichten dar, ohne über Details des Nachrichtenaustauschs Auskunft zu geben.
UI_ConversationLink_description =  Eine Konversations-Verbindung verbindet eine Konversation mit den Pools ihrer Teilnehmer. 
UI_CallConversation_description = Eine Aufruf-Konversation ist eine referenz auf eine global definierte Konversation.
UI_SubConversation_description = Eine Teil-Konversation ist ein Teil einer Konversation, der "aufgeklappt" werden kann, um Details der Konversation \
 (insbesondere den detaillierten Nachrichtenfluss) darzustellen.
UI_CallChoreography_description = Eine Aufruf-Choreographie beschreibt den Aufruf einer global definierten Choreographie oder einer global definierten \
 Choreographie-Aufgabe.
UI_AdHocSubProcess_description = Ein Ad-hoc-Teilprozess ist ein Teilprozess, in dem die enthaltenen Aktivitäten beliebig oft und in beliebiger \
 Reihenfolge ausgeführt werden dürfen, sofern ein eingezeichneter Sequenzfluss, Gateways oder Datenverbindungen weitere Einschränkungen vorgeben.
UI_Group_description = Eine Gruppe ist ein visuelles Hilfsmittel, um einen Ausschnitt im Diagramm hervorzuheben. Gruppen können beliebige \
 Modellelemente zusammenfassen und haben keine standardisiert definierte inhaltliche Bedeutung.
UI_TextAnnotation_description = Eine Notiz ist eine Anmerkung in Textform, die zu einem Diagramm hinzugefügt werden kann, um zusätzliche \
 Informationen zu geben. Eine Notiz kann mit einem Modellelement verbunden sein, dann bezieht sich diese Notiz auf dieses Element. 
UI_Any_name_description = Name 
UI_Documentation_text_description = Kommentare oder Anmerkungen zu dieser Aktivität.\n\
UI_Any_isForCompensation_description = \
 Ein Flag, das anzeigt, ob diese Aktivität als Kompensation genutzt wird.\n\n\
 falsch, wenn es sich um eine "normale" Aktivität handelt.\n\
 wahr, wenn diese Aktivität nur als Ergebnis der Auslösung eines Kompensations-Ereignisses gestartet wird\n\
UI_DataInput_name_description = \
 Name des Eingabe-Datenelementes, das einer Prozessvariablen\n\
 oder einem Ausdruck zugeordnet wird, bevor die Aktivität ausgeführt wird.
UI_DataInputAssociation_sourceRef_description = \
 Eine Prozessvariable, die dem Eingabe-Datenelement der Aktivität zugeordnet wird,\n\
 bevor die Aktivität ausgeführt wird.
UI_DataOutput_name_description = \
  Name des Ausgabe-Datenelementes, das die Ergebnisdaten der ausgeführten Aufgabe enthält (falls es solche gibt).\n
  Diese Ergebnisdaten werden einer Prozessvariablen zugewiesen, bevor der Prozessablauf fortgesetzt wird.
UI_DataOutputAssociation_targetRef_description = \ 
  Eine Prozessvariable, an die die bei der Ausführung der Aufgabe gelieferten Ergebnisdaten zugewiesen werden\n\
  (falls es solche gibt)
UI_Any_implementation_description = \
 Spezifiziert das Protokoll, das verwendet wird, um Nachrichten\n\
 zu senden und zu empfangen.\n\
 Mögliche Werte sind "Unspecified" (nicht festgelegt), "WebService" \n\
 oder eine URI, die auf ein anderes Protokoll verweist.
UI_Any_operationRef_description = \
 Legt die Operation fest, die beim Aufruf einer Service-Aufgabe ausgeführt wird.
UI_Any_messageRef_description = \
 Die von dieser Aufgabe gesendete bzw. empfangene Nachricht.
UI_Any_instantiate_description = \
 Wenn gesetzt, bewirkt das, dass eine neue Instanz des Prozesses erzeugt wird.
UI_Any_itemSubjectRef_description = \
 Format der übermittelten oder gespeicherten Datenobjekte:\n\
 definiert Datentyp, Kardinalität und Zustand von Daten.
UI_Any_itemKind_description = \
 Art eines Datenobjekts. Mögliche Werte sind: \n\
 Physical - ein reelles Objekt (z.B. eine Rechnung)\n\
  Physische Objekte sollten nur zur Dokumentation oder als Platzhalter für später\n\
  zu modellierende Datenstrukturen modelliert werden.\n\
 Information - Eine Datenstruktur, die Reihenfolge und Typen der Daten angibt\n\
  z.B. als XML-Datei oder als Java-Datentyp. 
UI_Any_isCollection_description = \
 Wenn gesetzt, heißt das, dass das Datenelement eine Sammlung mehrerer elemente ist.
UI_Any_structureRef_description = \
 Bei Datenobjekten des Typs \"Physical\" ist dies eine Beschreibung des Objektes in normaler Sprache.\n\
 Diese hat ekine Auswirkugn auf die automatisierte Prozessausführung.\n\
 Bei Datenobjekten des Typs \"Information\" wird hier die Datenstruktur definiert, z.B. durch Vorgabe eines XML-Schemas.
UI_Any_dataState_description = \
 Definiert den Zustand des Objekts. Eine Bestellung kann beispielsweise die Zustände "Übermittelt", "Erledigt" oder "Zurückgewiesen" haben.

CommonLabels_Data_Type=Datentyp
DefaultSchemaImportDialog_XSD_Type=XSD-Schema
DefaultSchemaImportDialog_XML_Filter=XML-Dateien
DefaultSchemaImportDialog_XSD_Filter=XML-Schema-Dateien
DefaultSchemaImportDialog_WSDL_Type=WSDL
DefaultSchemaImportDialog_BPMN2_Type=BPMN2
DefaultSchemaImportDialog_Missing_Namespace_Message={0} definiert keinen gültigen Namensraum.
DefaultSchemaImportDialog_All=Alle
DefaultSchemaImportDialog_BPMN2_Filter_1=BPMN 2.0-Diagramm-Dateien
DefaultSchemaImportDialog_BPMN2_Filter_2=BPMN 2.0-Diagramm-Dateien
DefaultSchemaImportDialog_Java_Filter_1=Java-Quelldateien
DefaultSchemaImportDialog_Java_Filter_2=Compilierte Java-Dateien
DefaultSchemaImportDialog_Java_Filter_3=Java-Archive
DefaultSchemaImportDialog_WSDL_Filter=WSDL-Definitionsdateien
